{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../todo.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddNewTaskPage_ion_chip_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-chip\", 17);\n    i0.ɵɵlistener(\"click\", function AddNewTaskPage_ion_chip_32_Template_ion_chip_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectCategory(i_r2));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tag_r1);\n  }\n}\nexport let AddNewTaskPage = /*#__PURE__*/(() => {\n  class AddNewTaskPage {\n    constructor(modalCtlr, todoService) {\n      this.modalCtlr = modalCtlr;\n      this.todoService = todoService;\n      this.categories = [];\n      this.newTaskObj = {};\n    }\n    ngOnInit() {\n      this.categories.push('Trabalho');\n      this.categories.push('Pessoal');\n    }\n    add() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.newTaskObj = {\n          itemName: this.itemName,\n          itemDueDate: this.itemDueDate,\n          itemPriority: this.itemPriority,\n          itemCategory: this.categorySelectedCategory\n        };\n        console.log(this.newTaskObj);\n        let uid = this.itemName + this.itemDueDate;\n        if (uid) {\n          this.todoService.addTask(uid, this.newTaskObj);\n        } else {\n          console.log(\"Tarefa Vazia não Pode ser Salva\");\n        }\n        this.dismis();\n      });\n    }\n    selectCategory(index) {\n      this.categorySelectedCategory = this.categories[index];\n      console.log(this.categorySelectedCategory);\n    }\n    dismis() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.modalCtlr.dismiss(this.newTaskObj);\n      });\n    }\n  }\n  AddNewTaskPage.ɵfac = function AddNewTaskPage_Factory(t) {\n    return new (t || AddNewTaskPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.TodoService));\n  };\n  AddNewTaskPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddNewTaskPage,\n    selectors: [[\"app-add-new-task\"]],\n    decls: 40,\n    vars: 5,\n    consts: [[1, \"ion-no-border\"], [\"name\", \"close\", \"slot\", \"end\", \"size\", \"larger\", 1, \"ion-padding\", 3, \"click\"], [1, \"ion-align-self-center\"], [\"placeholder\", \"T\\u00EDtulo da Tarefa...\", \"type\", \"text\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"low\"], [\"value\", \"middle\"], [\"value\", \"high\", \"selected\", \"\"], [\"name\", \"calendar-outline\", \"slot\", \"start\"], [\"displayFormat\", \"D MMM YYYY H:mm\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"pricetag-outline\", \"slot\", \"start\"], [\"color\", \"secondary\", \"outline\", \"true\", \"required\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", \"outline\", \"true\"], [\"color\", \"secondary\"], [\"fill\", \"clear\"], [\"slot\", \"icon-only\", \"name\", \"add-outline\"], [\"expand\", \"block\", \"type\", \"submit\", 1, \"ion-margin\", 3, \"click\"], [\"color\", \"secondary\", \"outline\", \"true\", \"required\", \"\", 3, \"click\"]],\n    template: function AddNewTaskPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Nova Tarefa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-icon\", 1);\n        i0.ɵɵlistener(\"click\", function AddNewTaskPage_Template_ion_icon_click_4_listener() {\n          return ctx.dismis();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"ion-content\")(6, \"form\")(7, \"ion-card\", 2)(8, \"ion-item\")(9, \"ion-input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_input_ngModelChange_9_listener($event) {\n          return ctx.itemName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\");\n        i0.ɵɵtext(12, \"Prioridade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_select_ngModelChange_13_listener($event) {\n          return ctx.itemPriority = $event;\n        });\n        i0.ɵɵelementStart(14, \"ion-select-option\", 5);\n        i0.ɵɵtext(15, \"Baixa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-select-option\", 6);\n        i0.ɵɵtext(17, \"M\\u00E9dia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-select-option\", 7);\n        i0.ɵɵtext(19, \"Alta\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"ion-item\");\n        i0.ɵɵelement(21, \"ion-icon\", 8);\n        i0.ɵɵelementStart(22, \"ion-label\");\n        i0.ɵɵtext(23, \"Vencimento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-datetime\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_datetime_ngModelChange_24_listener($event) {\n          return ctx.itemDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"ion-item\");\n        i0.ɵɵelement(26, \"ion-icon\", 10);\n        i0.ɵɵelementStart(27, \"ion-label\");\n        i0.ɵɵtext(28, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\");\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"ion-item\");\n        i0.ɵɵtemplate(32, AddNewTaskPage_ion_chip_32_Template, 3, 1, \"ion-chip\", 11);\n        i0.ɵɵelementStart(33, \"ion-chip\", 12)(34, \"ion-label\", 13);\n        i0.ɵɵtext(35, \"Nova\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ion-button\", 14);\n        i0.ɵɵelement(37, \"ion-icon\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"ion-button\", 16);\n        i0.ɵɵlistener(\"click\", function AddNewTaskPage_Template_ion_button_click_38_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(39, \"Adicionar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemPriority);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemDueDate);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.categorySelectedCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i1.IonButton, i1.IonCard, i1.IonChip, i1.IonContent, i1.IonDatetime, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonSelect, i1.IonSelectOption, i1.IonTitle, i1.IonToolbar, i1.SelectValueAccessor, i1.TextValueAccessor]\n  });\n  return AddNewTaskPage;\n})();","map":null,"metadata":{},"sourceType":"module"}